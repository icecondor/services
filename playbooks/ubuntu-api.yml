---
- hosts: api
  become: yes
  vars:
    ansible_ssh_user: root

  tasks:
# /etc/fstab
    - name: "/etc/fstab geodata"
      mount:
        path: /mnt/geodata
        src: LABEL=geodata
        fstype: xfs
        state: mounted
# Node.js
    - name: "install nodejs"
      action: apt pkg=nodejs state=present
# node/pm2
    - name: "install PM2"
      command: npm install -g pm2
      args:
        creates: /usr/bin/pm2
# Redis
    - name: "install redis"
      apt: pkg=redis-server state=present
    - name: "install libprotobuf"
      apt: pkg=libprotobuf-dev state=present
    - name: "install libprotoc"
      apt: pkg=libprotoc-dev state=present
# Ruby
    - name: "install ruby"
      apt: pkg=ruby-dev state=present
    - command: gem install bundler
      args:
        creates: /usr/local/bin/bundle
# NGINX
    - name: "install NGINX"
      apt: pkg=nginx state=present
    - file: state=absent path="/etc/nginx/sites-available"
    - file: state=absent path="/etc/nginx/sites-enabled"
    - name: "nginx.conf"
      copy: src=../keys/nginx.conf dest=/etc/nginx/
    - copy: src=../keys/nginx/_default dest=/etc/nginx/sites/
    - name: "sites/api.icecondor.com"
      copy: src=../keys/nginx/api.icecondor.com dest=/etc/nginx/sites/
    - copy: src=../keys/index.html dest=/usr/share/nginx/html/

#LEGO
    - name: "lego config"
      copy:
      args:
        src: ../keys/letsencrypt-lego/
        dest: /home/devops/.lego/
        force: no
      become_user: devops
    - name: "downloading lego 1.0.1"
      get_url:
      args:
        url: "https://github.com/xenolf/lego/releases/download/v1.0.1/lego_v1.0.1_linux_amd64.tar.gz"
        dest: /tmp/

    - name: "unpack lego 1.0.1"
      command: tar xf /tmp/lego_v1.0.1_linux_amd64.tar.gz lego
      args:
        chdir: /usr/local/bin
        creates: /usr/local/bin/lego
    - name: "reloading nginx"
      systemd: name=nginx state=reloaded

# GIT
    - name: "install git"
      apt: pkg=git state=present
    - name: "install autoconf" # for proto-sql
      apt: pkg=autoconf state=present
    - name: "install automake" # for proto-sql
      apt: pkg=automake state=present

# CODE
    - name: "git clone icecondor/services"
      git: repo=https://github.com/icecondor/services.git dest=/home/devops/services
      become_user: devops
    - name: "git clone icecondor/protobuf"
      git: repo=https://github.com/icecondor/protobuf.git dest=/home/devops/protobuf version=master
      become_user: devops
    - name: "protobuf$ make"
      command: make
      args:
        chdir: /home/devops/protobuf
      become_user: devops
    - name: "git clone icecondor/api"
      git: repo=https://github.com/icecondor/api.git dest=/home/devops/api version=master
      become_user: devops
    - name: "api$ npm install"
      command: npm install chdir=/home/devops/api creates=/home/devops/api/node_modules
      become_user: devops
    - copy: owner=devops src=../keys/settings.json dest=/home/devops/api/settings.json

# PM2 START
    - name: "pm2 start websockets.js"
      command: pm2 start -f websockets.js
      args:
        chdir: /home/devops/api
      become_user: devops
    - name: "pm2 start sockjs.js"
      command: pm2 start -f sockjs.js
      args:
        chdir: /home/devops/api
      become_user: devops
    - name: "typescript compile"
      command: ./node_modules/.bin/tsc
      args:
        chdir: /home/devops/api
      become_user: devops
    - name: "pm2 start api.js"
      command: pm2 start -f ./build/api/api.js
      args:
        chdir: /home/devops/api
      become_user: devops
